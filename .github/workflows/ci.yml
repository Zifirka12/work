name: Django CI/CD Pipeline


on: [push, pull_request]


jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest


    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    steps:
      - uses: actions/checkout@v4


      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'


      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt


      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U test_user; do
            sleep 1
          done


      - name: Run migrations and tests
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          POSTGRES_HOST: localhost
        run: |
          python manage.py migrate
          python manage.py test


  deploy:
    runs-on: ubuntu-latest
    needs: test


    steps:
    - name: Check out code
      uses: actions/checkout@v3


    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'


    - name: Generate SECRET_KEY
      run: |
        echo "SECRET_KEY=$(python -c 'import secrets; print(secrets.token_urlsafe(50))')" >> $GITHUB_ENV


    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_KEY }}


    - name: Test SSH connection
      run: |
        ssh -o StrictHostKeyChecking=no -T ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} echo "SSH connection successful"


    - name: Copy project files to server
      run: |
        rsync -avz --exclude '__pycache__' . ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.DEPLOY_DIR }}


    - name: Create .env file on server
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          cd ${{ secrets.DEPLOY_DIR }}
          echo "SECRET_KEY=${{ env.SECRET_KEY }}" > .env
          echo "DEBUG=False" >> .env
          echo "ALLOWED_HOSTS=158.160.87.62,localhost" >> .env
          echo "POSTGRES_DB=habit_tracker_db" >> .env
          echo "POSTGRES_USER=habit_user" >> .env
          echo "POSTGRES_PASSWORD=habit_password" >> .env
          echo "POSTGRES_HOST=db" >> .env
          echo "POSTGRES_PORT=5432" >> .env
          echo "REDIS_URL=redis://:default_redis_pass@redis:6379/0" >> .env
          echo "TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}" >> .env
        EOF

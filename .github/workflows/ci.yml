name: habit_tracker_by_luna

on: [ push, pull_request ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [-f requirements.txt]; then pip install -r requirements.txt; fi

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: lint

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |        
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for PSQL
      run: |
        until pg_isready -h localhost -p 5432 -U test_user; do
          sleep 1
        done

    - name: Run migrations
      env:
        SECRET_KEY: django-insecure
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_HOST: localhost

      run: python manage.py migrate

    - name: Run tests
      env:
        SECRET_KEY: django-insecure
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_HOST: localhost
      run: python manage.py test

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Log in DockerDesktop
        run: echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Set DockerImage name
        run: echo "IMAGE_NAME=${{ secrets.DOCKER_HUB_USERNAME }}/habit_tracker_by_luna:${{ github.sha }}" >> $GITHUB_ENV

      - name: Build DockerImage
        run: docker build -t ${{ env.IMAGE_NAME }} .

      - name: Push DockerImage
        run: docker push ${{ env.IMAGE_NAME }}

  deploy:
    name: Deploy to server
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Connect to server
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Add known hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF' 
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/habit_tracker_by_luna:${{ github.sha }} 
            sudo docker stop habit_tracker_by_luna || true 
            sudo docker rm habit_tracker_by_luna || true 
            sudo docker run -d --name habit_tracker_by_luna -e SECRET_KEY="${{ secrets.SECRET_KEY }}" -p 8080:80 ${{ secrets.DOCKER_HUB_USERNAME }}/habit_tracker_by_luna:${{ github.sha }}
          EOF
